[tasks.aws-sso-login]
alias = "al"
description = "SSOでログインして、現在のセッションに認証情報を設定する"
run = "aws sso login"

[tasks.dev-update-browserslist]
description = "Browserslistのデータベースを更新する"
run = "npx browserslist@latest --update-db"

[tasks.gh-list-deploy]
description = "デプロイの実行履歴を表示する"
run = """
gh run list \
    --repo firstcontributions/first-contributions \
    --limit 10
"""

[tasks.git-client-gitui]
description = "gitクライアント"
run = "gitui"

[tasks.git-client-lazygit]
description = "gitクライアント"
run = "lazygit"

[tasks.git-client-tig]
description = "gitクライアント"
run = "tig"

[tasks.git-log-glog]
description = "シンプルなワンライン表示"
run = """
git log \
    --graph \
    --date=short \
    --pretty='format:%C(yellow)%h%C(reset) %C(green)%ad%C(reset) %C(blue)%an%C(reset)%C(red)%d%C(reset) %s'
"""

[tasks.git-log-glogd]
description = "詳細表示（相対時間、全ブランチ）"
run = """
git log \
    --graph \
    --all \
    --date=relative \
    --pretty='format:%C(yellow)%h%C(reset) %C(green)(%ar)%C(reset) %C(blue)%an%C(reset)%C(red)%d%C(reset) %s'
"""

[tasks.git-log-glogs]
description = "統計情報付き詳細表示（変更ファイル数表示）"
run = """
git log \
    --graph \
    --stat \
    --date=iso \
    --pretty='format:%C(yellow)commit %H%C(reset)%C(red)%d%C(reset)%nAuthor: %C(blue)%an <%ae>%C(reset)%nDate:   %C(green)%ad%C(reset)%n%n    %s%n'
"""

[tasks.git-util-difit-browser]
description = "コードレビューを開く"
run = "npx difit@latest"

[tasks.git-util-difit-tui]
description = "コードレビューをTUIで開く"
run = "npx difit@latest --tui"

[tasks.git-util-hbr]
description = "リポジトリをブラウザで開く"
run = "hub browse $(ghq list | peco | cut -d '/' -f 2,3)"

[tasks.llm-claude-ccresume]
description = "Claude Codeのclaude --resumeを使いやすくする"
run = "npx @sasazame/ccresume@latest"

[tasks.llm-claude-ccsearch]
description = "Claude Codeのセッション検索・共有"
run = "npx ccsearch@latest"

[tasks.llm-claude-ccusage]
description = "Claude Codeのセッション使用状況を表示"
run = "npx ccusage@latest"

[tasks.llm-serena]
description = "serena-mcp-serverを起動"
run = "uvx --from git+https://github.com/oraios/serena serena-mcp-server"

[tasks.rust-cargo-update]
description = "cargo update"
run = "cargo install-update -a"

[tasks.rust-procs]
description = "プロセスモニタリング"
run = "procs"

[tasks.rust-rtop]
description = "システムモニタリング"
run = "rtop"

[tasks.shell-script-format]
description = "全ファイルのformatを実行"
run = """
echo "🎨 Formatting files..."
# シェルスクリプト（zshファイルを除外）
find . -name "*.sh" -type f -not -path "./scripts/tmux/get_volume_tmux.sh" -not -path "./scripts/tmux/tmux_pane_border.sh" -exec shfmt -w -s -i 2 {} +
# Markdown, YAML, JSON
prettier --write "**/*.{md,yaml,yml,json}"
# TOML
find . -name "*.toml" -type f -exec taplo format {} +
echo "✨ Formatting complete!"
"""

[tasks.shell-script-format-sh]
description = "シェルスクリプトのformatを実行"
run = """
echo "🎨 Formatting shell scripts..."
find . -name "*.sh" -type f -not -path "./scripts/tmux/get_volume_tmux.sh" -not -path "./scripts/tmux/tmux_pane_border.sh" -exec shfmt -w -s -i 2 {} +
"""

[tasks.shell-script-lint]
description = "全ファイルのlintを実行"
run = """
echo "🔍 Running lint checks..."
# Markdownlint
echo "📝 Checking Markdown files..."
markdownlint **/*.md --fix 2>/dev/null || echo "No markdown issues found"
# yamllint
echo "📄 Checking YAML files..."
yamllint . || echo "YAML lint completed"
echo "✅ Lint checks completed"
"""

[tasks.shell-script-lint-sh]
description = "シェルスクリプトのlintを実行"
run = """
echo "🔍 ShellCheck running..."
find . \\( -name "*.sh" -o -path "./.githooks/pre-commit" -o -name "imgcat" \\) -type f -not -path "./scripts/tmux/get_volume_tmux.sh" -not -path "./scripts/tmux/tmux_pane_border.sh" -not -path "./.git/*" -exec shellcheck {} +
"""

[tasks.shell-script-setup-lint]
description = "lintツールをセットアップ"
run = """
echo "📦 Installing lint tools..."
# Homebrew tools
brew install shellcheck shfmt yamllint
# npm tools
npm install -g prettier markdownlint-cli
# Rust tools
cargo install taplo-cli
# pre-commit
brew install pre-commit
pre-commit install
echo "✅ Setup complete!"
"""

[tasks.system-envpath]
description = "envpath"
run = "echo $PATH | sed 's/:/\\n/g'"

[tasks.system-envsort]
description = "環境変数をアルファベット順でソートして表示"
run = "env | sort"

[tasks.system-shreboot]
description = "SHELL再起動"
run = "exec $SHELL -l"

[tasks.system-tmux-reload]
description = "tmux設定を再読み込み"
run = "tmux source-file ~/.tmux.conf && tmux display-message 'tmux設定を再読み込みしました'"

[tasks.system-zsh-reload]
description = "zshの設定を再読み込み"
run = "source ~/.zshrc"

[tasks.util-update-brew]
description = "Homebrewのアップデートとアップグレード"
run = "brew update && brew upgrade && brew cleanup"

[tasks.util-bat]
description = "pecoでファイルを選択してbatで表示"
run = '''
file=$(find . -maxdepth 1 -type f | sort | peco)
if [ -n "$file" ]; then
    bat "$file"
fi
'''

[tasks.util-hexyl]
description = "pecoでファイルを選択してhexylで表示"
run = '''
file=$(find . -maxdepth 1 -type f | sort | peco)
if [ -n "$file" ]; then
    hexyl "$file"
fi
'''
